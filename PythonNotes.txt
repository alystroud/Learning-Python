Notes from Python Course on Codecademy

No {} brackets and no semi-colons;!
Whitespace is really important - unlike C and Java

Printing to the command line is super easy:
print "string"
print variable_name
A comma on the end of a print statement, means print the next thing on the same line
print "string",

A function is defined as below:

def function_name(arguments):
    print arguments

Variables don't need to have types when defined, just starting using the name of it.
Can find the type of a variable using:
  type(variable_name)

If statements are similar to C and Java:

if(condition):
    then do this
elif(condition):
    then do this
else:
    do this

Inbuilt functions:
max()
min()
abs()
len()
variable.lower()
variable.upper()

Importing libraries:

import math
   which means you would use math.sqrt()
from math import *
   which means you would use sqrt()

Arrays/Lists:
list_name.index(item) - returns the index number of that item if exists
list_name.insert(index, item) - inserts at that point
list_name.append(item) - inserts at the end of a list
list_name.sort() - sorts the list
list_name.remove(item) - removes the item

Loops:

for number in list:
    print number

Dictionaries/Key-value pairs
residents = {'Puffin' : 104, 'Sloth' : 105, 'Burmese Python' : 106}

print residents['Puffin']
Will print 104
They are mutable so can be changed after creation:

residents['Hippo'] = 107
will add a new item

del dict_name[item_name] will delete the item

You can't concatenate string and floats (like you can in java) so you use %

print "Total: %s" % variable

Asking for user input:
variable = raw_input("Guess Row: ")

while loops are very similar to C and Java

While/Else - new and different
"Something completely different about Python is the while/else
construction. while/else is similar to if/else, but there is a
difference: the else block will execute anytime the loop condition
is evaluated to False. This means that it will execute if the loop
is never entered or if the loop exits normally. If the loop exits
as the result of a break, the else will not be executed."

For/Else
Just like with while, for loops may have an else associated with them.
In this case, the else statement is executed after the for, but only
if the for ends normallyâ€”that is, not with a break. This code will break
when it hits 'tomato', so the else block won't be executed.

Anonymous Functions
One of the more powerful aspects of Python is that it allows for a
style of programming called functional programming, which means that
you're allowed to pass functions around just as if they were variables
or values. Sometimes we take this for granted, but not all languages
allow this!

self = this (in Java)

class is similar to Java
class ClassName(object):
this means that this class inherits from the object class
for def __init__ the first parameter should be self

Inheritance:
class ClassName(parentClass):

Override works in the same way as Java, just create the method with the same name and input
To use a parent method:
super(PartTimeEmployee, self).calculate_wage(hours)
where calculate_wage is the name of the parent method and hours in the argument

Printing inside a method
One useful class method to override is the built-in __repr__() method,
which is short for representation; by providing a return value in this
method, we can tell Python how to represent an object of our class
(for instance, when using a print statement).
